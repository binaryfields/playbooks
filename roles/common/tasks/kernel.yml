---
- name: Check current kernel version
  ansible.builtin.command: uname -r
  register: current_kernel
  changed_when: false
  tags: [kernel, info]

- name: Install/update kernel packages
  ansible.builtin.package:
    name: "{{ kernel_packages }}"
    state: latest
  register: kernel_update
  when: kernel_packages is defined
  tags: [kernel, install]

- name: Update initramfs and GRUB
  ansible.builtin.command: "{{ item }}"
  loop:
    - update-initramfs -u
    - update-grub
  when:
    - kernel_update.changed
    - ansible_os_family == "Debian"
  tags: [kernel, update]

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required
  tags: [kernel, reboot]

- name: Reboot system for kernel update
  ansible.builtin.reboot:
    reboot_timeout: 600
    test_command: uptime
  when:
    - kernel_update.changed or reboot_required.stat.exists
    - auto_reboot | default(true)
    - ansible_connection != 'local'
  tags: [kernel, reboot]

- name: Verify new kernel version
  ansible.builtin.command: uname -r
  register: new_kernel
  changed_when: false
  tags: [kernel, verify]

- name: Report kernel update status
  ansible.builtin.debug:
    msg: "Kernel updated from {{ current_kernel.stdout }} to {{ new_kernel.stdout }}"
  when: current_kernel.stdout != new_kernel.stdout
  tags: [kernel, info]
